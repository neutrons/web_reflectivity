# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-08-07 18:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_remote_submission', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_path', models.TextField(blank=True, default='')),
                ('title', models.TextField(blank=True, default='')),
                ('proposal', models.CharField(blank=True, default='', max_length=64)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
            ],
        ),
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.TextField(blank=True, default='')),
                ('parameter', models.TextField(blank=True, default='')),
                ('variables', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='FitProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
            ],
        ),
        migrations.CreateModel(
            name='FitterOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine', models.CharField(choices=[('dream', 'DREAM algorithm'), ('amoeba', 'Amoeba / Nelder-Mead algorithm'), ('lm', 'Levenberg-Marquardt algorithm')], default='amoeba', max_length=15)),
                ('steps', models.IntegerField(default=1000, help_text='Number of fitter steps')),
                ('burn', models.IntegerField(default=1000, help_text='Number of fitter burn steps')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Fitter options',
            },
        ),
        migrations.CreateModel(
            name='ReflectivityLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='material', max_length=64)),
                ('thickness', models.FloatField(default=50.0)),
                ('sld', models.FloatField(default=2.0)),
                ('roughness', models.FloatField(default=1.0)),
                ('remove', models.BooleanField(default=False)),
                ('layer_number', models.IntegerField(default=1000)),
                ('thickness_is_fixed', models.BooleanField(default=True)),
                ('thickness_min', models.FloatField(blank=True, default=10.0)),
                ('thickness_max', models.FloatField(blank=True, default=100.0)),
                ('thickness_error', models.FloatField(blank=True, default=0, null=True)),
                ('sld_is_fixed', models.BooleanField(default=True)),
                ('sld_min', models.FloatField(blank=True, default=1.0)),
                ('sld_max', models.FloatField(blank=True, default=4.0)),
                ('sld_error', models.FloatField(blank=True, default=0, null=True)),
                ('roughness_is_fixed', models.BooleanField(default=True)),
                ('roughness_min', models.FloatField(blank=True, default=1.0)),
                ('roughness_max', models.FloatField(blank=True, default=10.0)),
                ('roughness_error', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReflectivityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_path', models.TextField(blank=True, default='144761')),
                ('q_min', models.FloatField(blank=True, default=0)),
                ('q_max', models.FloatField(blank=True, default=1)),
                ('scale', models.FloatField(default=1)),
                ('scale_is_fixed', models.BooleanField(default=True)),
                ('scale_min', models.FloatField(blank=True, default=0.9)),
                ('scale_max', models.FloatField(blank=True, default=1.1)),
                ('scale_error', models.FloatField(blank=True, default=0, null=True)),
                ('background', models.FloatField(default=0)),
                ('background_is_fixed', models.BooleanField(default=True)),
                ('background_min', models.FloatField(blank=True, default=0)),
                ('background_max', models.FloatField(blank=True, default=1e-06)),
                ('background_error', models.FloatField(blank=True, default=0, null=True)),
                ('front_name', models.CharField(blank=True, default='air', max_length=64)),
                ('front_sld', models.FloatField(default=0)),
                ('front_sld_is_fixed', models.BooleanField(default=True)),
                ('front_sld_min', models.FloatField(blank=True, default=0)),
                ('front_sld_max', models.FloatField(blank=True, default=1)),
                ('front_sld_error', models.FloatField(blank=True, default=0, null=True)),
                ('back_name', models.CharField(blank=True, default='Si', max_length=64)),
                ('back_sld', models.FloatField(default=2.07)),
                ('back_sld_is_fixed', models.BooleanField(default=True)),
                ('back_sld_min', models.FloatField(blank=True, default=2.0)),
                ('back_sld_max', models.FloatField(blank=True, default=2.1)),
                ('back_sld_error', models.FloatField(blank=True, default=0, null=True)),
                ('back_roughness', models.FloatField(default=5.0)),
                ('back_roughness_is_fixed', models.BooleanField(default=True)),
                ('back_roughness_min', models.FloatField(blank=True, default=1)),
                ('back_roughness_max', models.FloatField(blank=True, default=5)),
                ('back_roughness_error', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SavedModelInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=64)),
                ('notes', models.TextField(blank=True, default='')),
                ('fit_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitting.FitProblem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SimultaneousConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependent_id', models.IntegerField()),
                ('dependent_parameter', models.CharField(max_length=64)),
                ('variable_id', models.IntegerField()),
                ('variable_parameter', models.CharField(max_length=64)),
                ('fit_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitting.FitProblem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SimultaneousFit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('fit_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitting.FitProblem')),
                ('remote_job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_remote_submission.Job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SimultaneousModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependent_data', models.TextField(blank=True, default='')),
                ('active', models.BooleanField(default=False)),
                ('fit_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitting.FitProblem')),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(default='')),
                ('file_name', models.TextField(blank=True, default='')),
                ('tags', models.TextField(blank=True, default='')),
                ('timestamp', models.DateTimeField(verbose_name='timestamp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='fitproblem',
            name='layers',
            field=models.ManyToManyField(related_name='_fitproblem_layers_+', to='fitting.ReflectivityLayer'),
        ),
        migrations.AddField(
            model_name='fitproblem',
            name='reflectivity_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitting.ReflectivityModel'),
        ),
        migrations.AddField(
            model_name='fitproblem',
            name='remote_job',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_remote_submission.Job'),
        ),
        migrations.AddField(
            model_name='fitproblem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='constraint',
            name='fit_problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitting.FitProblem'),
        ),
        migrations.AddField(
            model_name='constraint',
            name='layer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitting.ReflectivityLayer'),
        ),
        migrations.AddField(
            model_name='constraint',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
