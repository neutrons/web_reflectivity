import os
import sys
import time
import subprocess

def submit():
    output_dir = "${OUTPUT_DIR}"
    data_dir = "${WORK_DIR}"
    if not os.path.isdir(output_dir):
        os.makedirs(output_dir)
${PROCESS_DATA}

    model_file = """
import numpy
import os
from refl1d.names import *
from math import *
import warnings
import matplotlib.cbook
warnings.filterwarnings("ignore",category=matplotlib.cbook.mplDeprecation)
warnings.simplefilter('ignore', UserWarning)
${MODELS}

problem = FitProblem(${EXPT_LIST})
"""
    model_path = os.path.join(data_dir, '__model.py')
    with open(model_path, 'w') as fd:
        fd.write(model_file)

    cmd = "rm -f %s/*; PATH='${REFL1D_PATH}:$$PATH'; refl1d_cli.py --fit=${ENGINE} --steps=${REFL1D_STEPS} --burn=${REFL1D_BURN} --store=%s %s --batch" % (output_dir, output_dir, model_path)
    output_log = os.path.join(data_dir, 'fit.log')
    fd = open(output_log, 'w')
    fd.write("Starting fit: %s\n" % time.ctime())
    output_code = subprocess.call(cmd, stdout=fd, stderr=fd, shell=True)
    fd.write("Fit complete: %s\n" % time.ctime())

    print('REFL1D_VERSION ${REFL1D_VERSION}')
    print('SIMULTANEOUS ${EXPT_IDS}')
    try:
        with open(os.path.join(output_dir, '__model.err'), 'r') as out_params:
            print("MODEL_PARAMS_START")
            for line in out_params.readlines():
                if not line.strip().startswith('.'):
                    print(line.replace('\n',''))
            print("MODEL_PARAMS_END")
    except:
        fd.write("Error: could not process fit results\n")
        print(sys.exc_value)

    for i in range(len(${EXPT_IDS})):
        print("EXPT_START %s" % i)
        try:
            with open(os.path.join(output_dir, '__model-%d-refl.dat' % (i+1)), 'r') as out_refl:
                print("REFL_START")
                print(out_refl.read())
                print("REFL_END")
        except:
            fd.write("Error: could not read reflectivity output\n")
            print(sys.exc_value)

        try:
            with open(os.path.join(output_dir, '__model-%d-profile.dat' % (i+1)), 'r') as out_sld:
                print("SLD_START")
                i_count = 0
                for line in out_sld.readlines():
                    i_count += 1
                    if i_count % 10 == 0:
                        print(line.replace('\n',''))
                print("SLD_END")
        except:
            fd.write("Error: could not process SLD profile\n")
            print(sys.exc_value)

        try:
            with open(os.path.join(output_dir, '__model-%d-expt.json' % (i+1)), 'r') as json_refl:
                print("MODEL_JSON_START")
                print(json_refl.read())
                print("MODEL_JSON_END")
        except:
            fd.write("Error: could not read json output\n")
            print(sys.exc_value)

        print("EXPT_END %s" % i)
    fd.close()

if __name__ == '__main__':
    t_0 = time.time()
    submit()
    delta_time = time.time() - t_0
    print("Done: %g sec" % delta_time)
